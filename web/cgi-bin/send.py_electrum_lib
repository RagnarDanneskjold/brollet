#!/usr/bin/env python

# reads JSON and outputs JSON
# given a transaction, send it to the bitcoin network

# Using electrum to send the transaction

import cgi
import sys
import os
import json

sys.path.append( "cgi-bin/electrum" )
sys.path.append( "cgi-bin/electrum/lib" )
from lib import *

print "Content-type: text/plain\n\n";

fStorage = cgi.FieldStorage()
try:
    len(fStorage)
except Exception, err:
    print json.dumps({'status':'Error', 'error': 'No parameters specified.'})
    sys.exit()

if "tx" not in fStorage:
    res = {'status': 'Error', 'error':'Transaction not specified'}
    print json.dumps(res)
    sys.exit()
tx = fStorage["tx"].value

if tx == '' :
  res = {'status':'Error', 'error':'No transaction given.'}
  print json.dumps(res)
  sys.exit()

if len(tx) < 50:
  res = {'status':'Error', 'error':'Transaction too short.'}
  print json.dumps(res)
  sys.exit()

try:
  tx_hash = bitcoin.Hash(tx.decode('hex') )[::-1].encode('hex')
except Exception:
  res = {'status':'Error', 'error':'Transaction not in hex format.'}
  print json.dumps(res)
  sys.exit()

# TODO - pick a server to connect to from a saved list and make sure it is up

config_options = {'server':'electrum.be:50001:t','wallet_path':'', 'blockchain_headers_path':'', 'gui':''}
config = SimpleConfig(config_options)
wallet = Wallet(config)
interface = Interface(config, True)
interface.start()
wallet.interface = interface
synchronizer = WalletSynchronizer(wallet, config)
synchronizer.start()

ob, output = wallet.sendtx(tx)
interface.stop()

if ob: res = {'status':'OK', 'message':output}
else: res = {'status':'Error', 'error':output}
print json.dumps(res)



